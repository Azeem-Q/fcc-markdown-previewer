{"version":3,"file":"marked-react.cjs","sources":["../src/helpers.js","../src/ReactParser.js","../src/ReactRenderer.js","../src/Markdown.js"],"sourcesContent":["const htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\",\n};\n\n/** Used to match HTML entities and HTML characters. */\nconst reEscapedHtml = /&(?:amp|lt|gt|quot|#(?:0+)?39);/g;\nconst reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\nexport const unescape = (string = '') => {\n  return reHasEscapedHtml.test(string)\n    ? string.replace(reEscapedHtml, (entity) => htmlUnescapes[entity] || \"'\")\n    : string;\n};\n\nexport const joinBase = (path, base) => {\n  if (!base) {\n    return path;\n  }\n\n  try {\n    return new URL(path, base).href;\n  } catch {\n    return path;\n  }\n};\n","import { unescape } from './helpers.js';\n\nclass ReactParser {\n  renderer;\n\n  constructor(options) {\n    this.renderer = options.renderer;\n  }\n\n  parse(tokens) {\n    return tokens.map((token) => {\n      switch (token.type) {\n        case 'space': {\n          return null;\n        }\n\n        case 'heading': {\n          return this.renderer.heading(this.parseInline(token.tokens), token.depth);\n        }\n\n        case 'paragraph': {\n          return this.renderer.paragraph(this.parseInline(token.tokens));\n        }\n\n        case 'text': {\n          return token.tokens ? this.parseInline(token.tokens) : token.text;\n        }\n\n        case 'blockquote': {\n          const quote = this.parse(token.tokens);\n          return this.renderer.blockquote(quote);\n        }\n\n        case 'list': {\n          const children = token.items.map((item) => {\n            const listItemChildren = [];\n\n            if (item.task) {\n              listItemChildren.push(this.renderer.checkbox(item.checked ?? false));\n            }\n\n            listItemChildren.push(this.parse(item.tokens));\n\n            return this.renderer.listItem(listItemChildren);\n          });\n\n          return this.renderer.list(children, token.ordered);\n        }\n\n        case 'code': {\n          return this.renderer.code(token.text, token.lang);\n        }\n\n        case 'html': {\n          return this.renderer.html(token.text);\n        }\n\n        case 'table': {\n          const headerCells = token.header.map((cell, index) => {\n            return this.renderer.tableCell(this.parseInline(cell.tokens), { header: true, align: token.align[index] });\n          });\n\n          const headerRow = this.renderer.tableRow(headerCells);\n          const header = this.renderer.tableHeader(headerRow);\n\n          const bodyChilren = token.rows.map((row, index) => {\n            const rowChildren = row.map((cell) => {\n              return this.renderer.tableCell(this.parseInline(cell.tokens), {\n                header: false,\n                align: token.align[index],\n              });\n            });\n\n            return this.renderer.tableRow(rowChildren);\n          });\n\n          const body = this.renderer.tableBody(bodyChilren);\n\n          return this.renderer.table([header, body]);\n        }\n\n        case 'hr': {\n          return this.renderer.hr();\n        }\n\n        default: {\n          console.warn(`Token with \"${token.type}\" type was not found`); // eslint-disable-line no-console\n          return null;\n        }\n      }\n    });\n  }\n\n  parseInline(tokens) {\n    return tokens.map((token) => {\n      switch (token.type) {\n        case 'text': {\n          return this.renderer.text(unescape(token.text));\n        }\n\n        case 'strong': {\n          return this.renderer.strong(this.parseInline(token.tokens));\n        }\n\n        case 'em': {\n          return this.renderer.em(this.parseInline(token.tokens));\n        }\n\n        case 'del': {\n          return this.renderer.del(this.parseInline(token.tokens));\n        }\n\n        case 'codespan': {\n          return this.renderer.codespan(unescape(token.text));\n        }\n\n        case 'link': {\n          return this.renderer.link(token.href, this.parseInline(token.tokens));\n        }\n\n        case 'image': {\n          return this.renderer.image(token.href, token.text, token.title);\n        }\n\n        case 'html': {\n          return this.renderer.html(token.text);\n        }\n\n        case 'br': {\n          return this.renderer.br();\n        }\n\n        case 'escape': {\n          return this.renderer.text(token.text);\n        }\n\n        default: {\n          console.warn(`Token with \"${token.type}\" type was not found`); // eslint-disable-line no-console\n          return null;\n        }\n      }\n    });\n  }\n}\n\nexport default ReactParser;\n","import { createElement } from 'react';\n\nimport { joinBase } from './helpers.js';\n\nclass ReactRenderer {\n  elementId = 0;\n  options;\n\n  constructor(options) {\n    const { renderer } = options;\n\n    this.options = options;\n\n    if (renderer && typeof renderer === 'object') {\n      Object.entries(renderer).forEach(([rendererName, renderFunction]) => {\n        if (!this[rendererName] || typeof renderFunction !== 'function') {\n          return;\n        }\n\n        this[rendererName] = (...args) => {\n          this.elementId += 1;\n          return renderFunction.call(this, ...args);\n        };\n      });\n    }\n  }\n\n  #h(el, children = null, props = {}) {\n    const elProps = {\n      key: `marked-react-${this.elementId}`,\n    };\n\n    this.elementId += 1;\n    return createElement(el, { ...props, ...elProps }, children);\n  }\n\n  heading(children, level) {\n    return this.#h(`h${level}`, children);\n  }\n\n  paragraph(children) {\n    return this.#h('p', children);\n  }\n\n  link(href, text) {\n    const url = joinBase(href, this.options.baseURL);\n    const target = this.options.openLinksInNewTab ? '_blank' : null;\n    return this.#h('a', text, { href: url, target });\n  }\n\n  image(src, alt, title) {\n    const url = joinBase(src, this.options.baseURL);\n    return this.#h('img', null, { src: url, alt, title });\n  }\n\n  codespan(code, lang = null) {\n    const className = lang ? `${this.options.langPrefix}${lang}` : null;\n    return this.#h('code', code, { className });\n  }\n\n  code(code, lang) {\n    return this.#h('pre', this.codespan(code, lang));\n  }\n\n  blockquote(children) {\n    return this.#h('blockquote', children);\n  }\n\n  list(children, ordered) {\n    return this.#h(ordered ? 'ol' : 'ul', children);\n  }\n\n  listItem(children) {\n    return this.#h('li', children);\n  }\n\n  checkbox(checked) {\n    return this.#h('input', null, { type: 'checkbox', disabled: true, checked });\n  }\n\n  table(children) {\n    return this.#h('table', children);\n  }\n\n  tableHeader(children) {\n    return this.#h('thead', children);\n  }\n\n  tableBody(children) {\n    return this.#h('tbody', children);\n  }\n\n  tableRow(children) {\n    return this.#h('tr', children);\n  }\n\n  tableCell(children, flags) {\n    const tag = flags.header ? 'th' : 'td';\n    return this.#h(tag, children, { align: flags.align });\n  }\n\n  strong(children) {\n    return this.#h('strong', children);\n  }\n\n  em(children) {\n    return this.#h('em', children);\n  }\n\n  del(children) {\n    return this.#h('del', children);\n  }\n\n  text(text) {\n    return text;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  hr() {\n    return this.#h('hr');\n  }\n\n  br() {\n    return this.#h('br');\n  }\n}\n\nexport default ReactRenderer;\n","import { createElement, Fragment } from 'react';\nimport { Lexer } from 'marked';\n\nimport ReactParser from './ReactParser.js';\nimport ReactRenderer from './ReactRenderer.js';\n\nconst validateComponentProps = (props) => {\n  if (props.value && typeof props.value !== 'string') {\n    throw new TypeError(`[marked-react]: Expected value to be of type string but got ${typeof props.value}`);\n  }\n\n  if (props.children && typeof props.children !== 'string') {\n    throw new TypeError(`[marked-react]: Expected children to be of type string but got ${typeof props.children}`);\n  }\n};\n\nconst Markdown = (props) => {\n  validateComponentProps(props);\n\n  // lexer options\n  const lexerOptions = {\n    breaks: props.breaks,\n    gfm: props.gfm,\n  };\n\n  // convert input markdown into tokens\n  const markdownString = props.value ?? props.children ?? '';\n  const tokens = props.isInline\n    ? Lexer.lexInline(markdownString, lexerOptions)\n    : Lexer.lex(markdownString, lexerOptions);\n\n  // parser options\n  const parserOptions = {\n    renderer: new ReactRenderer({\n      renderer: props.renderer,\n      baseURL: props.baseURL,\n      openLinksInNewTab: props.openLinksInNewTab,\n      langPrefix: props.langPrefix,\n    }),\n  };\n\n  const parser = new ReactParser(parserOptions);\n  const children = props.isInline\n    ? parser.parseInline(tokens)\n    : parser.parse(tokens);\n\n  return createElement(Fragment, null, children);\n};\n\nMarkdown.defaultProps = {\n  isInline: false,\n  breaks: false,\n  gfm: true,\n  baseURL: null,\n  openLinksInNewTab: true,\n  langPrefix: 'language-',\n  renderer: null,\n};\n\nexport default Markdown;\n"],"names":["htmlUnescapes","reEscapedHtml","reHasEscapedHtml","RegExp","source","unescape","string","test","replace","entity","joinBase","path","base","URL","href","ReactParser","options","renderer","tokens","map","token","type","heading","parseInline","depth","paragraph","text","quote","parse","blockquote","children","items","item","listItemChildren","task","push","checkbox","checked","listItem","list","ordered","code","lang","html","headerCells","header","cell","index","tableCell","align","headerRow","tableRow","tableHeader","bodyChilren","rows","row","rowChildren","body","tableBody","table","hr","console","warn","strong","em","del","codespan","link","image","title","br","ReactRenderer","Object","entries","forEach","rendererName","renderFunction","elementId","args","call","level","url","baseURL","target","openLinksInNewTab","src","alt","className","langPrefix","disabled","flags","tag","el","props","elProps","key","createElement","_objectSpread","validateComponentProps","value","TypeError","Markdown","lexerOptions","breaks","gfm","markdownString","isInline","Lexer","lexInline","lex","parserOptions","parser","Fragment","defaultProps"],"mappings":"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"}